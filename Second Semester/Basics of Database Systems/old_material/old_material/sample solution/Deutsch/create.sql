CREATE SEQUENCE seq_security INCREMENT BY 2 MINVALUE 0 NO CYCLE;;
CREATE SEQUENCE seq_weighting INCREMENT BY 12 MINVALUE 5000 NO CYCLE;
CREATE TYPE BrokerType AS ENUM ('Interactive Brokers', 'Fidelity', 'Zacks Trade');


CREATE TABLE Broker (
	BName BrokerType NOT NULL,
	KEY VARCHAR(255) NOT NULL,
	URL VARCHAR(255) NOT NULL,
	BrokerDepot VARCHAR(255) NOT NULL,
	BrokerageGeb NUMERIC(10, 2),
	PRIMARY KEY(BName)
);

CREATE TABLE Depot (
	DName VARCHAR(255) NOT NULL,
	Kosten NUMERIC(10,2) NOT NULL,
	BName BrokerType NOT NULL,
	FOREIGN KEY(BName) REFERENCES Broker(BName),
	PRIMARY KEY(BName, DName)
);

CREATE TABLE Wertpapier (
	WID INTEGER NOT NULL DEFAULT NEXTVAL('seq_security'),
	Isin VARCHAR(12) NOT NULL CHECK(Isin ~* $$^([a-z]){2}\w{10}$$),
	Name VARCHAR(255) NOT NULL,
	DName VARCHAR(255) NOT NULL,
	BName BrokerType NOT NULL,
	FOREIGN KEY(BName, DName) REFERENCES Depot(BName, DName),
	PRIMARY KEY(BName, DName, WID)
);

CREATE TABLE Dividende (
	Datum DATE NOT NULL CHECK(Datum > '1940-01-01'::DATE),
	Kurs NUMERIC(10,2) NOT NULL,
	Ertrag NUMERIC(10,2) NOT NULL,
	WID INTEGER NOT NULL,
	DName VARCHAR(255) NOT NULL,
	BName BrokerType NOT NULL,
	FOREIGN KEY(BName, DName, WID) REFERENCES Wertpapier(BName, DName, WID),
	PRIMARY KEY(Datum, BName, DName, WID)
);

CREATE TABLE Fonds (
	TFC NUMERIC(10,2) NOT NULL,
	WID INTEGER NOT NULL,
	DName VARCHAR(255) NOT NULL,
	BName BrokerType NOT NULL,
	FOREIGN KEY(BName, DName, WID) REFERENCES Wertpapier(BName, DName, WID),
	PRIMARY KEY(BName, DName, WID)
);

CREATE TABLE Aktien (
	WID INTEGER NOT NULL,
	DName VARCHAR(255) NOT NULL,
	BName BrokerType NOT NULL,
	FOREIGN KEY(BName, DName, WID) REFERENCES Wertpapier(BName, DName, WID),
	PRIMARY KEY(BName, DName, WID)
);


CREATE TABLE Anleihen (
	WID INTEGER NOT NULL,
	DName VARCHAR(255) NOT NULL,
	BName BrokerType NOT NULL,
	FOREIGN KEY(BName, DName, WID) REFERENCES Wertpapier(BName, DName, WID),
	PRIMARY KEY(BName, DName, WID)
);


CREATE TABLE Gewichtung (
	GID INTEGER DEFAULT NEXTVAL('seq_weighting'),
	Gewicht NUMERIC(10, 2) NOT NULL CHECK(Gewicht > 0 AND Gewicht <= 1),
	FWID INTEGER NOT NULL,
	FDName VARCHAR(255) NOT NULL,
	FBName BrokerType NOT NULL,
	WWID INTEGER NOT NULL,
	WDName VARCHAR(255) NOT NULL,
	WBName BrokerType NOT NULL,
	UNIQUE(FBName, FDName, FWID, WBName, WDName, WWID),
	FOREIGN KEY(FBName, FDName, FWID) REFERENCES Fonds(BName, DName, WID),
	FOREIGN KEY(WBName, WDName, WWID) REFERENCES Wertpapier(BName, DName, WID),
	PRIMARY KEY(GID)
);

CREATE TABLE Boerse (
	Name VARCHAR(255) NOT NULL,
	Tz VARCHAR(255) NOT NULL,
	exStockBroker BrokerType NOT NULL,
	exStockDepot VARCHAR(255) NOT NULL,
	exStockWID INTEGER NOT NULL,
	BoersenGeb NUMERIC(10, 2),
	PRIMARY KEY(Name)
);

ALTER TABLE Broker ADD CONSTRAINT fk_BrokerDepot
      FOREIGN KEY (BName, BrokerDepot) REFERENCES Depot(BName, DName)
      DEFERRABLE INITIALLY DEFERRED;


ALTER TABLE Boerse ADD CONSTRAINT fk_ExchangeStock
      FOREIGN KEY (exStockBroker, exStockDepot, exStockWID) REFERENCES Aktien(BName, DName, WID)
      DEFERRABLE INITIALLY DEFERRED;


CREATE TABLE unterstuetzt (
	BName BrokerType NOT NULL,
	Boerse VARCHAR(255) NOT NULL,
	FOREIGN KEY(BName) REFERENCES Broker(BName),
	FOREIGN KEY(Boerse) REFERENCES Boerse(Name),
	PRIMARY KEY(BName, Boerse)
);

CREATE TABLE Orders (
	Time DATE NOT NULL,
	OId INTEGER NOT NULL,
	Geb NUMERIC(10,2) NOT NULL,
	Preis NUMERIC(10,2) NOT NULL,
	Nr INTEGER NOT NULL,
	Boerse VARCHAR(255) NOT NULL,
	WID INTEGER NOT NULL,
	DName VARCHAR(255) NOT NULL,
	BName BrokerType NOT NULL,
	FOREIGN KEY(Boerse) REFERENCES Boerse(Name),
	FOREIGN KEY(BName, DName, WID) REFERENCES Wertpapier(BName, DName, WID),
	PRIMARY KEY(OId)
);

CREATE TABLE Kauforder (
	OrderId INTEGER NOT NULL,
	FOREIGN KEY(OrderId) REFERENCES Orders(OId),
	PRIMARY KEY(OrderId)
);

CREATE TABLE Verkauforder (
	OrderId INTEGER NOT NULL,
	KEST NUMERIC(10, 2) NOT NULL,
	FOREIGN KEY(OrderId) REFERENCES Orders(OId),
	PRIMARY KEY(OrderId)
);
